<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SHA-2 | Rajeev Sharma</title>
    <link>/tags/sha-2/</link>
      <atom:link href="/tags/sha-2/index.xml" rel="self" type="application/rss+xml" />
    <description>SHA-2</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Rajeev Sharma</copyright><lastBuildDate>Sat, 09 May 2015 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/rajeevkannav.jpeg</url>
      <title>SHA-2</title>
      <link>/tags/sha-2/</link>
    </image>
    
    <item>
      <title>Openssl CSR SHA-2</title>
      <link>/post/2015-05-09-openssl-csr-sha2/</link>
      <pubDate>Sat, 09 May 2015 00:00:00 +0000</pubDate>
      <guid>/post/2015-05-09-openssl-csr-sha2/</guid>
      <description>

&lt;p&gt;For those of you who may have seen&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This site makes use of a SHA-1 Certificate; it&#39;s recommended you use certificates
with signature algorithms that use hash functions stronger than SHA-1. 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mozilla, along with other browser vendors, is working on a plan to phase out support for the SHA-1 hash algorithm.
Weaknesses in hash algorithms can lead to situations in which attackers can obtain fraudulent certificates.&lt;/p&gt;

&lt;h3 id=&#34;generate-a-ssl-key-file&#34;&gt;Generate a SSL Key File&lt;/h3&gt;

&lt;p&gt;Firstly you will need to generate a key  file. The example below will generate a 2048 bit key file with a SHA-256 signature.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl genrsa -out key_name.key 2048 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want extra security you could increase the bit lengths.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl genrsa -out key_name.key 4096
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;** Please note that both these examples will not add a password to the key file. To do that you will need to add -des3 to the command.&lt;/p&gt;

&lt;h3 id=&#34;create-a-certificate-signing-request-csr&#34;&gt;Create a Certificate Signing Request (CSR)&lt;/h3&gt;

&lt;p&gt;This step will create the actually request file that you will submit to the Certificate Authority (CA) of your choice.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl req -out CSR.csr -key key_name.key -new -sha256
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can check that your Certificate Signing Request (CSR) has the correct signature by running the following.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl req -in CSR.csr -noout -text
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It should display the following if the signature is correct.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Signature Algorithm: sha256WithRSAEncryption
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-the-certificate-crt&#34;&gt;Install the Certificate (CRT)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Will Come Soon.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;test-your-installed-certificate&#34;&gt;Test your installed Certificate&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Will Come Soon.
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;and-if-you-get-stuck-ask-here-http-stackoverflow-com&#34;&gt;And if you get stuck… &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Ask Here&lt;/a&gt;&lt;/h6&gt;

&lt;p&gt;&lt;sup&gt; &lt;b&gt;email me &lt;/b&gt;  &lt;a href=&#34;#myfootnote1&#34;&gt;rajeevsharma86@gmail.com&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
