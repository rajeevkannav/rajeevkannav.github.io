<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oauth2 | Rajeev Sharma</title>
    <link>/tags/oauth2/</link>
      <atom:link href="/tags/oauth2/index.xml" rel="self" type="application/rss+xml" />
    <description>Oauth2</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Rajeev Sharma</copyright><lastBuildDate>Sat, 25 Apr 2015 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/rajeevkannav.jpeg</url>
      <title>Oauth2</title>
      <link>/tags/oauth2/</link>
    </image>
    
    <item>
      <title>Oauth2 Doorkeeper WorkFlow</title>
      <link>/post/2015-02-21-oauth2-doorkeeper-workflow/</link>
      <pubDate>Sat, 25 Apr 2015 00:00:00 +0000</pubDate>
      <guid>/post/2015-02-21-oauth2-doorkeeper-workflow/</guid>
      <description>&lt;h3 id=&#34;an-introduction-to-oauth-2&#34;&gt;An Introduction to OAuth 2&lt;/h3&gt;
&lt;h6 id=&#34;introduction&#34;&gt;Introduction&lt;/h6&gt;
&lt;p&gt;OAuth 2 is an authorization framework that enables applications to obtain limited access to resources on an HTTP service,
such as Facebook, GitHub, and DigitalOcean. It works by delegating user authentication to the service that hosts the
resource, and authorizing third-party applications to access the resource. OAuth 2 provides authorization flows for web
and desktop applications, and mobile devices.&lt;/p&gt;
&lt;h6 id=&#34;oauth-roles&#34;&gt;OAuth Roles&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;OAuth defines four roles:

    * Resource Owner
    * Client
    * Resource Server
    * Authorization Server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will detail each role in the following subsections.&lt;/p&gt;
&lt;h6 id=&#34;resource-owner-user&#34;&gt;Resource Owner: User&lt;/h6&gt;
&lt;p&gt;The resource owner is the user(resource) who authorizes an application to access their account. The application&amp;rsquo;s access
to the user&amp;rsquo;s account is limited to the &amp;ldquo;scope&amp;rdquo; of the authorization granted (e.g. read or write access).&lt;/p&gt;
&lt;h6 id=&#34;resource--authorization-server-api&#34;&gt;Resource / Authorization Server: API&lt;/h6&gt;
&lt;p&gt;The resource server hosts the protected user accounts, and the authorization server verifies the identity of the user
then issues access tokens to the application. From an application developer&amp;rsquo;s point of view, a service&amp;rsquo;s API fulfills
both the resource and authorization server roles. We will refer to both of these roles combined, as the Service or API role.&lt;/p&gt;
&lt;h6 id=&#34;client-application&#34;&gt;Client: Application&lt;/h6&gt;
&lt;p&gt;The client is the application that wants to access the user&amp;rsquo;s account. Before it may do so, it must be authorized by the
user, and the authorization must be validated by the API.&lt;/p&gt;
&lt;h6 id=&#34;abstract-protocol-flow&#34;&gt;Abstract Protocol Flow&lt;/h6&gt;
&lt;p&gt;Now that you have an idea of what the OAuth roles are, let&amp;rsquo;s look at a diagram of how they generally interact with each other:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://assets.digitalocean.com/articles/oauth/abstract_flow.png&#34; alt=&#34;Abstract Protocol Flow&#34; title=&#34;Abstract Protocol Flow&#34;&gt;&lt;/p&gt;
&lt;h6 id=&#34;and-if-you-get-stuck-ask-herehttpstackoverflowcom&#34;&gt;And if you get stuck… 
&lt;a href=&#34;http://stackoverflow.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask Here&lt;/a&gt;&lt;/h6&gt;
&lt;p&gt;&lt;sup&gt; &lt;b&gt;email me &lt;/b&gt;  
&lt;a href=&#34;#myfootnote1&#34;&gt;rajeevsharma86@gmail.com&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
